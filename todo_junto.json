{
    "frontend/index.html": "<!DOCTYPE html>\n<html lang=\"es\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n    <title>Rental-MVP</title>\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\n  <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700;800&display=swap\" rel=\"stylesheet\">\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script type=\"module\" src=\"/src/main.tsx\"></script>\n  </body>\n</html>\n",
    "frontend/package.json": "{\n  \"name\": \"rental-mvp-frontend\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"vite\",\n    \"build\": \"vite build\",\n    \"preview\": \"vite preview\",\n    \"lint\": \"eslint \\\"src/**/*.{ts,tsx}\\\" --max-warnings=0 --fix\"\n  },\n  \"dependencies\": {\n    \"@headlessui/react\": \"^2.2.4\",\n    \"@heroicons/react\": \"^2.2.0\",\n    \"@hookform/resolvers\": \"^3.3.4\",\n    \"@tanstack/react-query\": \"^5.38.0\",\n    \"axios\": \"^1.6.8\",\n    \"clsx\": \"^2.1.1\",\n    \"focus-trap-react\": \"^10.2.1\",\n    \"react\": \"^18.3.1\",\n    \"react-dom\": \"^18.3.1\",\n    \"react-hook-form\": \"^7.60.0\",\n    \"react-hot-toast\": \"^2.5.2\",\n    \"react-icons\": \"^5.5.0\",\n    \"react-router-dom\": \"^6.23.1\",\n    \"zod\": \"^3.23.4\",\n    \"zxcvbn\": \"^4.4.2\"\n  },\n  \"devDependencies\": {\n    \"@tailwindcss/container-queries\": \"\",\n    \"@tailwindcss/forms\": \"^0.5.10\",\n    \"@tailwindcss/line-clamp\": \"^0.4.4\",\n    \"@tailwindcss/typography\": \"^0.5.16\",\n    \"@types/react\": \"^18.3.5\",\n    \"@types/react-dom\": \"^18.3.2\",\n    \"@typescript-eslint/eslint-plugin\": \"^7.18.0\",\n    \"@typescript-eslint/parser\": \"^7.18.0\",\n    \"@vitejs/plugin-react\": \"^4.2.0\",\n    \"autoprefixer\": \"^10.4.20\",\n    \"eslint\": \"^8.57.0\",\n    \"eslint-plugin-react\": \"^7.34.1\",\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\n    \"postcss\": \"^8.4.38\",\n    \"tailwindcss\": \"^3.4.4\",\n    \"typescript\": \"^5.5.0\",\n    \"vite\": \"^5.3.1\"\n  }\n}\n",
    "frontend/vite.config.ts": "import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  plugins: [react()],\n  server: {\n    port: 5173,\n    proxy: {\n      // ‚ñ∫ redirige API a tu back (FastAPI en :8000)\n      \"/api\": \"http://localhost:8000\"\n    }\n  }\n});\n",
    "frontend/Dockerfile": "# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Etapa 1: build Vite ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nFROM node:20 AS builder\nWORKDIR /frontend\n\nCOPY package.json package-lock.json* ./\nRUN npm ci\n\nCOPY . .\nRUN npm run build          # genera /frontend/dist\n\n# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Etapa 2: Nginx ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nFROM nginx:1.27-alpine\n\n# Copia est√°ticos compilados\nCOPY --from=builder /frontend/dist /usr/share/nginx/html\n\n# Proxy /api ‚Üí backend\nCOPY nginx.conf /etc/nginx/conf.d/default.conf\n\nEXPOSE 80\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n",
    "frontend/nginx.conf": "server {\n    listen 80;\n    server_name _;\n\n    # est√°ticos de Vite\n    root /usr/share/nginx/html;\n    index index.html;\n\n    # single-page\n    location / {\n        try_files $uri $uri/ /index.html;\n    }\n\n    # proxy API\n    location /api/ {\n        proxy_pass http://backend:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n    }\n\n    # subidas\n    location /uploads/ {\n        proxy_pass http://backend:8000;\n    }\n}\n",
    "frontend/tsconfig.json": "{\n    \"compilerOptions\": {\n        \"target\": \"ES2022\",\n        \"lib\": [\n            \"DOM\",\n            \"DOM.Iterable\",\n            \"ES2022\"\n        ],\n        \"module\": \"ESNext\",\n        \"moduleResolution\": \"Node\",\n        \"types\": [\n            \"vite/client\"\n        ],\n        \"strict\": true,\n        \"jsx\": \"react-jsx\",\n        \"resolveJsonModule\": true,\n        \"esModuleInterop\": true,\n        \"skipLibCheck\": true,\n        \"forceConsistentCasingInFileNames\": true\n    },\n    \"include\": [\n        \"src\"\n    ]\n}",
    "frontend/postcss.config.js": "// rental-mvp/frontend/postcss.config.js\nexport default {\n    plugins: {\n        tailwindcss: {},\n        autoprefixer: {}\n    }\n};\n",
    "frontend/tailwind.config.js": "/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n    content: ['./index.html', './src/**/*.{ts,tsx}'],\n    theme: {\n        //   ‚Üì‚Üì‚Üì breakpoints fluidos\n        screens: {\n            xs: '375px',\n            sm: '640px',\n            md: '768px',\n            lg: '1024px',\n            xl: '1280px',\n            '2xl': '1440px',\n            '3xl': '1920px'\n        },\n        container: { center: true, padding: '1rem' },\n        extend: {\n            fontFamily: { sans: ['Inter', 'system-ui', 'sans-serif'] },\n            colors: {\n                brand: { DEFAULT: '#0d6efd', hover: '#0b5ed7' },\n                surface: '#ffffff'\n            },\n            boxShadow: {\n                card: '0 1px 3px rgba(0,0,0,.08)',\n                cardHover: '0 4px 12px rgba(0,0,0,.12)'\n            }\n        }\n    },\n    plugins: [\n        require('@tailwindcss/forms'),\n        require('@tailwindcss/typography'),\n        require('@tailwindcss/line-clamp'),\n        require('@tailwindcss/container-queries') // üÜï\n    ]\n};\n",
    "frontend/src/App.tsx": "import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from \"@tanstack/react-query\";\n\nimport { AuthProvider } from \"./hooks/useAuth\";\nimport Header from \"./components/layout/Header\";\nimport Footer from \"./components/layout/Footer\";\nimport Home from \"./pages/Home\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Protected from \"./Protected\";\n\nimport \"./styles/global.css\";\n\nconst queryClient = new QueryClient();\n\nexport default function App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <AuthProvider>\n        <BrowserRouter>\n          <Header />\n\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/login\" element={<Login />} />\n            <Route path=\"/register\" element={<Register />} />\n\n            {/*  RUTA SEGURA  */}\n            <Route\n              path=\"/dashboard\"\n              element={\n                <Protected>\n                  <Dashboard />\n                </Protected>\n              }\n            />\n          </Routes>\n\n          <Footer />\n        </BrowserRouter>\n      </AuthProvider>\n    </QueryClientProvider>\n  );\n}\n",
    "frontend/src/api.ts": "import axios from \"axios\";\n\n/**\n * Singleton Axios con:\n *  ¬∑ baseURL \"/api\"\n *  ¬∑ Authorization autom√°tico si hay token en localStorage\n */\nexport const api = axios.create({ baseURL: \"/api\" });\n\napi.interceptors.request.use(cfg => {\n  const token = localStorage.getItem(\"token\");\n  if (token) cfg.headers.Authorization = `Bearer ${token}`;\n  return cfg;\n});\n",
    "frontend/src/main.tsx": "// src/main.tsx\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { Toaster } from 'react-hot-toast';          // üÜï\nimport './styles/global.css';\n\nReactDOM.createRoot(document.getElementById('root') as HTMLElement).render(\n  <React.StrictMode>\n    <App />\n    <Toaster                                         // üÜï\n      position=\"top-right\"\n      toastOptions={{\n        style: { fontSize: '0.875rem' },            // 14 px\n        duration: 3000\n      }}\n    />\n  </React.StrictMode>\n);\n",
    "frontend/src/utils.ts": "// utils.ts\n/**\n * URL base de la API.  Ajusta en .env.local si no usas localhost:8000\n *   VITE_API_BASE_URL=https://tu-dominio.com\n */\nexport const API_BASE =\n  import.meta.env.VITE_API_BASE_URL ?? \"http://localhost:8000\";\n\n/**  \n * Devuelve una URL de imagen v√°lida.\n * - Si ya es absoluta ‚Üí la deja tal cual.\n * - Si empieza por ‚Äú/‚Äù ‚Üí la concatena con API_BASE.\n * - Si viene `undefined` ‚Üí usa el *fallback*.\n */\nexport function resolveImage(url: string | undefined, fallback: string) {\n  if (!url) return fallback;\n  if (/^https?:\\/\\//i.test(url)) return url; // absoluta\n  return `${API_BASE}${url.startsWith(\"/\") ? \"\" : \"/\"}${url}`;\n}\n",
    "frontend/src/Protected.tsx": "import { Navigate, useLocation } from \"react-router-dom\";\nimport { useAuth } from \"./hooks/useAuth\";\n\nexport default function Protected({ children }: { children: JSX.Element }) {\n  const { token } = useAuth();\n  const loc = useLocation();\n  return token ? children : <Navigate to=\"/login\" replace state={{ from: loc }} />;\n}\n",
    "frontend/src/hooks/useAuth.tsx": "import React, { createContext, useContext, useState } from \"react\";\n\n/* ------------------------------------------------------------------ */\n/*                       Contexto & proveedor                         */\n/* ------------------------------------------------------------------ */\ntype AuthContextT = {\n  token: string | null;\n  login: (t: string) => void;\n  logout: () => void;\n};\nconst AuthContext = createContext<AuthContextT | undefined>(undefined);\n\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({\n  children\n}) => {\n  const [token, setToken] = useState<string | null>(\n    () => localStorage.getItem(\"token\")\n  );\n\n  const login = (t: string) => {\n    localStorage.setItem(\"token\", t);\n    setToken(t);\n  };\n\n  const logout = () => {\n    localStorage.removeItem(\"token\");\n    setToken(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ token, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n/* ------------------------------------------------------------------ */\n/*                           Hooks util                               */\n/* ------------------------------------------------------------------ */\nexport const useAuth = () => {\n  const ctx = useContext(AuthContext);\n  if (!ctx) throw new Error(\"useAuth debe usarse dentro de <AuthProvider>\");\n  return ctx;\n};\n\n/** Lee el token directo de localStorage (v√°lido fuera de React). */\nexport const getTokenLS = () => localStorage.getItem(\"token\");\n",
    "frontend/src/styles/global.css": "/* frontend/src/styles/global.css */\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n/* ---------- BASE ---------- */\n@layer base {\n  html { @apply scroll-smooth; }\n  body { @apply bg-gray-50 text-gray-800 antialiased font-sans; }\n}\n\n/* ---------- COMPONENTS ---------- */\n@layer components {\n  /* Botones */\n  .btn        { @apply inline-flex items-center justify-center rounded-md bg-brand px-4 py-2 text-sm font-medium text-white shadow-sm transition-colors hover:bg-brand-hover disabled:opacity-60; }\n  .btn--ghost { @apply inline-flex items-center justify-center rounded-md border border-brand px-4 py-2 text-sm font-medium text-brand transition-colors hover:bg-brand/5; }\n\n  /* Badges */\n  .badge         { @apply inline-flex items-center rounded-full px-2.5 py-0.5 text-xs font-medium; }\n  .badge--ok     { @apply badge bg-green-100 text-green-800; }\n  .badge--danger { @apply badge bg-red-100 text-red-800; }\n\n  /* Campos select gen√©rico */\n  .form-select { @apply block w-full rounded-md border-gray-300 text-sm shadow-sm focus:border-brand focus:ring-brand; }\n\n  /* Toast */\n  .toast-success { @apply bg-green-600 text-white; }\n  .toast-error   { @apply bg-red-600 text-white; }\n\n  /* T√≠tulos fluidos (ejemplo h1) */\n  h1 { font-size: clamp(2.25rem, 5vw + 1rem, 3.5rem); } /* 36 px ‚Üí 56 px aprox */\n}\n\n/* ---------- UTILITIES PERSONALIZADAS ---------- */\n@layer utilities {\n  .text-balance { text-wrap: balance; }\n\n  /* Evita re-pintados innecesarios en grandes listas */\n  .content-auto { content-visibility: auto; }\n\n  /* Oculta scrollbar (usarlo con cuidado) */\n  .scrollbar-none::-webkit-scrollbar { display: none; }\n}\n",
    "frontend/src/features/auth/register.ts": "import { api } from \"../../api\";\n\n/** Lanza 400 si el username o el email ya est√°n en uso. */\nexport async function register(\n  username: string,\n  email: string,\n  password: string\n): Promise<void> {\n  await api.post(\"/auth/signup\", { username, email, password });\n}\n",
    "frontend/src/features/auth/login.ts": "import { api } from \"../../api\";\n\nexport async function login(username: string, password: string): Promise<string> {\n  const { data } = await api.post(\n    \"/auth/token\",\n    new URLSearchParams({ username, password }),\n    { headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" } }\n  );\n  return data.access_token as string;\n}\n",
    "frontend/src/features/categories/useCategories.ts": "import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nexport type Category = { id: number; name: string };\n\nexport default function useCategories() {\n  const [data, setData] = useState<Category[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    axios\n      .get<Category[]>('/api/categories/')\n      .then(r => setData(r.data))\n      .finally(() => setLoading(false));\n  }, []);\n\n  return { data, loading };\n}\n",
    "frontend/src/features/items/useItems.ts": "import { useQuery } from \"@tanstack/react-query\";\nimport { api } from \"../../api\";\n\nexport type Item = {\n  id: number;\n  name: string;\n  description?: string;\n  price_per_h: number;\n  available: boolean;\n  image_url?: string;\n  categories?: { id: number; name: string }[];\n};\n\nexport function useItems(params?: URLSearchParams) {\n  const queryKey = [\"items\", params?.toString() ?? \"\"];\n\n  const { data, isLoading, refetch } = useQuery<Item[]>({\n    queryKey,\n    queryFn: () =>\n      api.get<Item[]>(\"/items/\", { params }).then(r => r.data),\n    staleTime: 60_000      // 1 min sin refetch\n  });\n\n  return { data: data ?? [], loading: isLoading, refetch };\n}\n",
    "frontend/src/features/items/AddItemModal.tsx": "import { Fragment, useEffect, useState } from \"react\";\nimport { Dialog, Transition } from \"@headlessui/react\";\nimport { XMarkIcon, PhotoIcon } from \"@heroicons/react/24/outline\";\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\nimport useCategories, { Category } from \"../categories/useCategories\";\nimport { useAuth } from \"../../hooks/useAuth\";\n\n/* -------------------------------------------------------------------------- */\n/*                               schema + types                               */\n/* -------------------------------------------------------------------------- */\n\nconst priceRegex = /^\\d+([.,]\\d{1,2})?$/; // hasta 2 decimales\n\nconst schema = z.object({\n  name: z.string().min(3, \"M√≠nimo 3 caracteres\"),\n  description: z.string().max(500).optional(),\n  price_per_h: z\n    .string()\n    .regex(priceRegex, \"Precio inv√°lido\")\n    .transform(v => Number(v.replace(\",\", \".\"))),\n  categories: z.array(z.number()).min(1, \"Selecciona al menos una categor√≠a\"),\n  image: z\n    .instanceof(File)\n    .refine(f => f.size < 5 * 1024 * 1024, \"M√°x. 5 MB\")\n    .optional()\n});\n\ntype FormData = z.infer<typeof schema>;\n\ntype Props = {\n  open: boolean;\n  onClose: () => void;\n  onCreated: () => void; // callback para refrescar listado\n};\n\n/* -------------------------------------------------------------------------- */\n\nexport default function AddItemModal({ open, onClose, onCreated }: Props) {\n  const { data: cats } = useCategories();\n  const { token } = useAuth();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset,\n    setValue,\n    formState: { errors, isSubmitting }\n  } = useForm<FormData>({\n    resolver: zodResolver(schema),\n    defaultValues: { categories: [] }\n  });\n\n  /* preview de imagen ------------------------------------------------------ */\n  const file = watch(\"image\");\n  const [preview, setPreview] = useState<string | null>(null);\n\n  useEffect(() => {\n    if (file && file instanceof File) {\n      const url = URL.createObjectURL(file);\n      setPreview(url);\n      return () => URL.revokeObjectURL(url);\n    }\n    setPreview(null);\n  }, [file]);\n\n  /* submit ----------------------------------------------------------------- */\n  async function onSubmit(data: FormData) {\n    if (!token) {\n      toast.error(\"Debes haber iniciado sesi√≥n\");\n      return;\n    }\n    try {\n      /* 1.- subimos imagen (opcional) */\n      let image_url: string | undefined;\n      if (data.image) {\n        const fd = new FormData();\n        fd.append(\"file\", data.image);\n        const up = await axios.post<{ url: string }>(\"/api/upload/\", fd, {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        image_url = up.data.url;\n      }\n\n      /* 2.- creamos √≠tem */\n      await axios.post(\n        \"/api/items/\",\n        {\n          name: data.name,\n          description: data.description,\n          price_per_h: data.price_per_h,\n          categories: data.categories,\n          image_url\n        },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n\n      toast.success(\"¬°Producto publicado!\");\n      reset();          // limpia formulario\n      onCreated();      // refresca lista en parent\n      onClose();        // cierra modal\n    } catch (err: any) {\n      console.error(err);\n      toast.error(err.response?.data?.detail ?? \"Error al crear producto\");\n    }\n  }\n\n  /* interfaz ---------------------------------------------------------------- */\n\n  return (\n    <Transition show={open} as={Fragment}>\n      <Dialog\n        onClose={() => {\n          reset();\n          onClose();\n        }}\n        className=\"relative z-50\"\n      >\n        {/* backdrop */}\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-200\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-150\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/40 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        {/* panel */}\n        <div className=\"fixed inset-0 grid place-items-center p-4\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-200\"\n            enterFrom=\"scale-95 opacity-0\"\n            enterTo=\"scale-100 opacity-100\"\n            leave=\"ease-in duration-150\"\n            leaveFrom=\"scale-100 opacity-100\"\n            leaveTo=\"scale-95 opacity-0\"\n          >\n            <Dialog.Panel className=\"max-w-2xl w-full overflow-hidden rounded-xl bg-white shadow-xl\">\n              {/* header */}\n              <div className=\"flex items-center justify-between border-b px-6 py-4\">\n                <Dialog.Title className=\"text-lg font-semibold\">\n                  Nuevo producto\n                </Dialog.Title>\n                <button\n                  className=\"rounded p-1 text-gray-500 hover:bg-gray-100\"\n                  onClick={() => {\n                    reset();\n                    onClose();\n                  }}\n                >\n                  <XMarkIcon className=\"h-5 w-5\" />\n                </button>\n              </div>\n\n              {/* form */}\n              <form\n                onSubmit={handleSubmit(onSubmit)}\n                className=\"grid gap-6 px-6 py-8 md:grid-cols-2\"\n              >\n                {/* ---- columna 1 ---- */}\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium\">Nombre</label>\n                    <input\n                      {...register(\"name\")}\n                      className=\"form-input mt-1 w-full\"\n                      placeholder=\"Taladro Bosch 800 W\"\n                    />\n                    {errors.name && (\n                      <p className=\"text-xs text-red-600\">\n                        {errors.name.message}\n                      </p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium\">\n                      Descripci√≥n\n                    </label>\n                    <textarea\n                      {...register(\"description\")}\n                      rows={5}\n                      className=\"form-input mt-1 w-full resize-none\"\n                      placeholder=\"A√±ade detalles t√©cnicos, estado, accesorios incluidos‚Ä¶\"\n                    />\n                    {errors.description && (\n                      <p className=\"text-xs text-red-600\">\n                        {errors.description.message}\n                      </p>\n                    )}\n                  </div>\n\n                  <div>\n                    <label className=\"block text-sm font-medium\">\n                      Precio / hora (‚Ç¨)\n                    </label>\n                    <input\n                      {...register(\"price_per_h\")}\n                      className=\"form-input mt-1 w-full\"\n                      placeholder=\"3.5\"\n                      inputMode=\"decimal\"\n                    />\n                    {errors.price_per_h && (\n                      <p className=\"text-xs text-red-600\">\n                        {errors.price_per_h.message}\n                      </p>\n                    )}\n                  </div>\n                </div>\n\n                {/* ---- columna 2 ---- */}\n                <div className=\"space-y-4\">\n                  {/* imagen ------------------------------------------------ */}\n                  <div>\n                    <label className=\"block text-sm font-medium\">Imagen</label>\n\n                    <label className=\"mt-1 flex h-48 w-full cursor-pointer items-center justify-center rounded border-2 border-dashed border-gray-300 text-sm text-gray-500 hover:border-brand hover:text-brand\">\n                      {preview ? (\n                        <img\n                          src={preview}\n                          alt=\"preview\"\n                          className=\"h-full w-full object-cover\"\n                        />\n                      ) : (\n                        <span className=\"flex flex-col items-center gap-1\">\n                          <PhotoIcon className=\"h-8 w-8\" />\n                          <span>PNG, JPG, m√°x. 5 MB</span>\n                        </span>\n                      )}\n                      <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        className=\"sr-only\"\n                        onChange={e =>\n                          setValue(\"image\", e.target.files?.[0] as File)\n                        }\n                      />\n                    </label>\n                    {errors.image && (\n                      <p className=\"text-xs text-red-600\">\n                        {errors.image.message}\n                      </p>\n                    )}\n                  </div>\n\n                  {/* categor√≠as ------------------------------------------ */}\n                  <div>\n                    <p className=\"mb-1 text-sm font-medium\">Categor√≠as</p>\n                    <div className=\"flex flex-wrap gap-2\">\n                      {cats.map((c: Category) => {\n                        const selected = watch(\"categories\").includes(c.id);\n                        return (\n                          <button\n                            type=\"button\"\n                            key={c.id}\n                            onClick={() => {\n                              const current = new Set(watch(\"categories\"));\n                              selected\n                                ? current.delete(c.id)\n                                : current.add(c.id);\n                              setValue(\"categories\", [...current]);\n                            }}\n                            className={\n                              selected\n                                ? \"rounded-full bg-brand px-3 py-0.5 text-xs text-white\"\n                                : \"rounded-full border px-3 py-0.5 text-xs text-gray-600\"\n                            }\n                          >\n                            {c.name}\n                          </button>\n                        );\n                      })}\n                    </div>\n                    {errors.categories && (\n                      <p className=\"text-xs text-red-600\">\n                        {errors.categories.message}\n                      </p>\n                    )}\n                  </div>\n                </div>\n\n                {/* ---- footer ---- */}\n                <div className=\"md:col-span-2 flex justify-end gap-3\">\n                  <button\n                    type=\"button\"\n                    className=\"btn--ghost\"\n                    onClick={() => {\n                      reset();\n                      onClose();\n                    }}\n                  >\n                    Cancelar\n                  </button>\n                  <button className=\"btn\" disabled={isSubmitting}>\n                    Publicar\n                  </button>\n                </div>\n              </form>\n            </Dialog.Panel>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n}\n",
    "frontend/src/features/items/ItemList.tsx": "import { useEffect, useMemo, useRef, useState } from 'react';\nimport axios from 'axios';\nimport Container from '../../components/shared/Container';\nimport ItemCard from '../../components/ui/ItemCard';\nimport SkeletonCard from '../../components/ui/SkeletonCard';\nimport FiltersSidebar from '../../components/filters/FiltersSidebar';\nimport { useItems } from './useItems';\nimport { useAuth } from '../../hooks/useAuth';\nimport AddItemModal from './AddItemModal';\nimport { Bars3Icon, XMarkIcon } from '@heroicons/react/24/outline';\n\n/* -------------------------------------------------- */\n/*                    Tipado filtros                  */\n/* -------------------------------------------------- */\ntype FiltersT = {\n  name?: string;\n  min_price?: number;\n  max_price?: number;\n  categories?: number[];\n  order?: 'price_asc' | 'price_desc' | 'name';\n};\n\nexport default function ItemList() {\n  /* ------------------------------ filtros ------------------------------ */\n  const [filters, setFilters] = useState<FiltersT>({});\n\n  /* Serializamos filtros ‚Üí query-string */\n  const params = useMemo(() => {\n    const p = new URLSearchParams();\n\n    Object.entries(filters).forEach(([k, v]) => {\n      if (v === undefined || v === '') return;\n      if (Array.isArray(v)) v.forEach(val => p.append(k, String(val)));\n      else p.set(k, String(v));\n    });\n\n    /* orden (price_asc | price_desc | name) */\n    if (filters.order) {\n      const [field, dir] = filters.order.split('_');\n      p.set('order_by', field === 'price' ? 'price' : 'name');\n      p.set('order_dir', dir);\n    }\n    return p;\n  }, [filters]);\n\n  const { data: items, loading, refetch } = useItems(params);\n  const { token } = useAuth();\n\n  /* ----------------------- drawer m√≥vil filtros ----------------------- */\n  const [openFilters, setOpenFilters] = useState(false);\n\n  /* ------------------------ infinite-scroll demo ---------------------- */\n  const sentinel = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!sentinel.current) return;\n    const ob = new IntersectionObserver(\n      entries => {\n        if (entries[0].isIntersecting && !loading) {\n          /* Aqu√≠ podr√≠as paginar ‚Üí aumentar offset y refetch() */\n        }\n      },\n      { rootMargin: '600px' }\n    );\n    ob.observe(sentinel.current);\n    return () => ob.disconnect();\n  }, [loading]);\n\n  /* ----------------------- modal ‚Äúa√±adir √≠tem‚Äù ------------------------ */\n  const [addOpen, setAddOpen] = useState(false);\n\n  /* -------------------------------------------------------------------- */\n  return (\n    <Container>\n      {/* ---------- bot√≥n abrir filtros (solo xs-sm) ---------- */}\n      <button onClick={() => setOpenFilters(true)} className=\"btn mb-4 md:hidden\">\n        <Bars3Icon className=\"mr-2 h-5 w-5\" />\n        Filtros\n      </button>\n\n      <div className=\"flex flex-col gap-10 md:flex-row\">\n        {/* ---------- Filtros (off-canvas en m√≥vil) ---------- */}\n        {/* Backdrop */}\n        <div\n          className={`\n            fixed inset-0 z-40 bg-black/40 backdrop-blur-sm transition-opacity md:hidden\n            ${openFilters ? 'opacity-100 pointer-events-auto' : 'opacity-0 pointer-events-none'}\n          `}\n          onClick={() => setOpenFilters(false)}\n        />\n\n        {/* Panel */}\n        <aside\n          className={`\n            fixed left-0 top-0 z-50 h-full w-72 bg-white p-6 shadow-xl transition-transform\n            md:static md:h-auto md:w-auto md:translate-x-0 md:bg-transparent md:shadow-none\n            ${openFilters ? 'translate-x-0' : '-translate-x-full'}\n          `}\n        >\n          {/* Cerrar (solo m√≥vil) */}\n          <button onClick={() => setOpenFilters(false)} className=\"mb-4 md:hidden\">\n            <XMarkIcon className=\"h-6 w-6\" />\n          </button>\n\n          <FiltersSidebar\n            value={filters}\n            onChange={setFilters}\n            onReset={() => setFilters({})}\n          />\n        </aside>\n\n        {/* -------------------- listado de tarjetas -------------------- */}\n        <section className=\"flex-1\">\n          {/* CTA a√±adir producto (solo usuarios logueados) */}\n          {token && (\n            <div className=\"flex justify-end\">\n              <button className=\"btn mb-4\" onClick={() => setAddOpen(true)}>\n                A√±adir producto\n              </button>\n            </div>\n          )}\n\n          {/* loader inicial */}\n          {loading && !items.length ? (\n            <GridSkeleton />\n          ) : (\n            <Grid>\n              {items.map(it => (\n                <ItemCard key={it.id} item={it} />\n              ))}\n              {/* sentinel infinite-scroll */}\n              <div ref={sentinel} />\n            </Grid>\n          )}\n\n          {/* vac√≠o */}\n          {!loading && !items.length && (\n            <p className=\"py-6 text-center text-gray-500\">No hay resultados.</p>\n          )}\n        </section>\n      </div>\n\n      {/* modal a√±adir */}\n      <AddItemModal open={addOpen} onClose={() => setAddOpen(false)} onCreated={refetch} />\n    </Container>\n  );\n}\n\n/* -------------------------------------------------- */\n/*                       Helpers                      */\n/* -------------------------------------------------- */\n\n/* Grid responsive: min-width 12 rem (‚âà192 px) y se\n   auto-ajusta con container-queries si el padre pasa\n   a ser un ‚Äúcontainer‚Äù ‚Äî funciona tambi√©n sin CQ. */\nconst Grid = ({ children }: { children: React.ReactNode }) => (\n  <div\n    className=\"\n      grid gap-6 py-6 content-auto\n      @container lg:[grid-template-columns:repeat(auto-fill,minmax(14rem,1fr))]\n      [grid-template-columns:repeat(auto-fill,minmax(12rem,1fr))]\n    \"\n  >\n    {children}\n  </div>\n);\n\nconst GridSkeleton = () => (\n  <Grid>\n    {Array.from({ length: 8 }).map((_, i) => (\n      <SkeletonCard key={i} />\n    ))}\n  </Grid>\n);\n",
    "frontend/src/features/rentals/RentalList.tsx": "import { useAuth } from \"../../hooks/useAuth\";\nimport { useRentals } from \"./useRentals\";\n\nexport default function RentalList() {\n  const { token } = useAuth();\n  const { data: rentals, loading } = useRentals(token);   // ‚Üê sin cambios extra\n\n  if (!token)   return <p className=\"text-gray-500\">Debes iniciar sesi√≥n para ver tus alquileres.</p>;\n  if (loading)  return <p className=\"text-gray-500\">Cargando‚Ä¶</p>;\n  if (!rentals.length) return <p className=\"text-gray-500\">No tienes alquileres activos.</p>;\n\n  return (\n    <div className=\"space-y-2\">\n      {rentals.map(r => (\n        <div\n          key={r.id}\n          className=\"flex items-center justify-between rounded-md bg-white p-3 shadow\"\n        >\n          <span className=\"font-medium\">{r.item.name}</span>\n          <span className={r.returned ? \"badge--ok\" : \"badge badge--danger\"}>\n            {r.returned ? \"Devuelto\" : \"Pendiente\"}\n          </span>\n        </div>\n      ))}\n    </div>\n  );\n}\n",
    "frontend/src/features/rentals/useRentals.ts": "import { useQuery } from \"@tanstack/react-query\";\nimport { api } from \"../../api\";\nimport { Item } from \"../items/useItems\";\n\nexport type Rental = {\n  id: number;\n  item: Item;\n  start_at: string;\n  end_at: string;\n  deposit: number;\n  returned: boolean;\n};\n\n/**\n * Devuelve la lista de alquileres del usuario.  \n * Solo dispara la petici√≥n cuando `token` es *truthy*.\n */\nexport function useRentals(token: string | null) {\n  const enabled = Boolean(token);          // ‚Üê normalizamos\n\n  const { data, isLoading } = useQuery<Rental[]>({\n    queryKey: [\"rentals\"],\n    queryFn: () => api.get<Rental[]>(\"/rentals/me\").then(r => r.data),\n    enabled,                               // ‚úì ahora siempre boolean\n    staleTime: 60_000,\n    retry: false\n  });\n\n  return { data: data ?? [], loading: isLoading };\n}\n",
    "frontend/src/pages/Register.tsx": "// src/pages/Register.tsx\nimport { useForm } from \"react-hook-form\";\nimport { z } from \"zod\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport zxcvbn from \"zxcvbn\";\nimport { useNavigate } from \"react-router-dom\";\nimport toast from \"react-hot-toast\";\nimport clsx from \"clsx\";\n\nimport { register as apiRegister } from \"../features/auth/register\";\nimport { login as apiLogin } from \"../features/auth/login\";\nimport { useAuth } from \"../hooks/useAuth\";\n\nimport Container from \"../components/shared/Container\";\nimport SocialButton from \"../components/ui/SocialButton\";\nimport { FcGoogle } from \"react-icons/fc\";\nimport { FaGithub } from \"react-icons/fa\";\n\n/* -------- validation schema -------- */\nconst schema = z\n  .object({\n    username: z.string().min(3, \"M√≠n. 3 caracteres\"),\n    email: z.string().email(\"Email inv√°lido\"),\n    password: z.string().min(8, \"M√≠n. 8 caracteres\"),\n    confirm: z.string(),\n    terms: z.literal(true, {\n      errorMap: () => ({ message: \"Acepta los t√©rminos\" }),\n    }),\n  })\n  .refine(data => data.password === data.confirm, {\n    message: \"Las contrase√±as no coinciden\",\n    path: [\"confirm\"],\n  });\n\ntype FormData = z.infer<typeof schema>;\n\nexport default function Register() {\n  const navigate = useNavigate();\n  const { login: saveToken } = useAuth();\n\n  const {\n    register,\n    handleSubmit,\n    watch,\n    formState: { errors, isSubmitting },\n  } = useForm<FormData>({ resolver: zodResolver(schema) });\n\n  const pwd = watch(\"password\", \"\");\n\n  /* -------------------------------------------------------------------- */\n  const onSubmit = async (data: FormData) => {\n    try {\n      // 1) signup\n      await apiRegister(data.username, data.email, data.password);\n\n      // 2) auto-login\n      const token = await apiLogin(data.username, data.password);\n      saveToken(token);\n\n      toast.success(\"Cuenta creada, ¬°bienvenido!\");\n      navigate(\"/dashboard\");\n    } catch (err: any) {\n      // FastAPI devuelve detail en .response.data.detail\n      const msg =\n        err?.response?.data?.detail ??\n        \"No se pudo crear la cuenta. Int√©ntalo m√°s tarde.\";\n      toast.error(msg);\n    }\n  };\n\n  /* -------------------------------------------------------------------- */\n  const strength = zxcvbn(pwd).score; // 0-4\n\n  return (\n    <Container>\n      <main className=\"flex min-h-[70vh] items-center justify-center\">\n        <div className=\"w-full max-w-md space-y-6 rounded-xl bg-white p-8 shadow-card\">\n          <h1 className=\"text-center text-2xl font-bold\">Crear cuenta</h1>\n\n          {/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ login social ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */}\n          <div className=\"space-y-3\">\n            <SocialButton provider=\"google\" icon={FcGoogle} label=\"Con Google\" />\n            <SocialButton provider=\"github\" icon={FaGithub} label=\"Con GitHub\" />\n          </div>\n\n          <div className=\"relative text-xs text-gray-400\">\n            <hr />\n            <span className=\"absolute left-1/2 top-1/2 -translate-x-1/2 bg-white px-2\">\n              o reg√≠strate con email\n            </span>\n          </div>\n\n          {/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ formulario ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */}\n          <form onSubmit={handleSubmit(onSubmit)} className=\"space-y-4\">\n            <input\n              {...register(\"username\")}\n              placeholder=\"Nombre de usuario\"\n              className=\"form-input w-full\"\n            />\n            {errors.username && (\n              <p className=\"text-xs text-red-600\">{errors.username.message}</p>\n            )}\n\n            <input\n              {...register(\"email\")}\n              type=\"email\"\n              placeholder=\"Email\"\n              className=\"form-input w-full\"\n            />\n            {errors.email && (\n              <p className=\"text-xs text-red-600\">{errors.email.message}</p>\n            )}\n\n            <input\n              {...register(\"password\")}\n              type=\"password\"\n              placeholder=\"Contrase√±a\"\n              className=\"form-input w-full\"\n            />\n\n            {/* strength meter */}\n            {pwd && (\n              <div className=\"h-2 w-full overflow-hidden rounded bg-gray-200\">\n                <div\n                  style={{ width: `${(strength + 1) * 20}%` }}\n                  className={clsx(\n                    \"h-full transition-all\",\n                    [\n                      \"bg-red-500\",\n                      \"bg-orange-400\",\n                      \"bg-yellow-400\",\n                      \"bg-lime-500\",\n                      \"bg-green-600\",\n                    ][strength],\n                  )}\n                />\n              </div>\n            )}\n            {errors.password && (\n              <p className=\"text-xs text-red-600\">\n                {errors.password.message}\n              </p>\n            )}\n\n            <input\n              {...register(\"confirm\")}\n              type=\"password\"\n              placeholder=\"Repite contrase√±a\"\n              className=\"form-input w-full\"\n            />\n            {errors.confirm && (\n              <p className=\"text-xs text-red-600\">{errors.confirm.message}</p>\n            )}\n\n            {/* terms */}\n            <label className=\"flex gap-2 text-xs text-gray-600\">\n              <input type=\"checkbox\" {...register(\"terms\")} />\n              Acepto los&nbsp;\n              <a href=\"/terms\" className=\"text-brand hover:underline\">\n                T√©rminos y la Pol√≠tica de privacidad\n              </a>\n            </label>\n            {errors.terms && (\n              <p className=\"text-xs text-red-600\">{errors.terms.message}</p>\n            )}\n\n            <button className=\"btn w-full\" disabled={isSubmitting}>\n              {isSubmitting ? \"Creando‚Ä¶\" : \"Crear cuenta\"}\n            </button>\n          </form>\n        </div>\n      </main>\n    </Container>\n  );\n}\n",
    "frontend/src/pages/Login.tsx": "// src/pages/Login.tsx\nimport { FormEvent, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../hooks/useAuth';\nimport { login as apiLogin } from '../features/auth/login';\n\nimport { FcGoogle } from 'react-icons/fc';\nimport { FaGithub } from 'react-icons/fa';\nimport SocialButton from '../components/ui/SocialButton';\nimport Container from '../components/shared/Container';\nimport toast from 'react-hot-toast';  \n\nexport default function Login() {\n  const [user, setUser] = useState('');\n  const [pwd, setPwd] = useState('');\n  const [error, setError] = useState<string | null>(null);\n\n  const { login: saveToken } = useAuth();\n  const nav = useNavigate();\n\n  async function handleSubmit(e: FormEvent) {\n    e.preventDefault();\n    try {\n  const token = await apiLogin(user, pwd);\n  saveToken(token);\n  nav('/dashboard');\n  toast.success('¬°Bienvenido de nuevo!');            // üÜï\n} catch {\n  toast.error('Usuario o contrase√±a incorrectos');   // üÜï\n}\n  }\n\n  return (\n    <Container>\n      <main className=\"flex min-h-[70vh] items-center justify-center\">\n        <div className=\"w-full max-w-md space-y-6 rounded-xl bg-white p-8 shadow-card\">\n          {/* T√≠tulo */}\n          <h1 className=\"text-center text-2xl font-bold\">Iniciar sesi√≥n</h1>\n\n          {/* Social login */}\n          <div className=\"space-y-3\">\n            <SocialButton\n              provider=\"google\"\n              icon={FcGoogle}\n              label=\"Entrar con Google\"\n            />\n            <SocialButton\n              provider=\"github\"\n              icon={FaGithub}\n              label=\"Entrar con GitHub\"\n            />\n          </div>\n\n          <div className=\"relative\">\n            <hr />\n            <span className=\"absolute left-1/2 top-1/2 -translate-x-1/2 bg-white px-2 text-xs text-gray-400\">\n              o contin√∫a con tu cuenta\n            </span>\n          </div>\n\n          {/* Form tradicional */}\n          {error && <p className=\"text-center text-sm text-red-600\">{error}</p>}\n          <form onSubmit={handleSubmit} className=\"space-y-4\">\n            <input\n              className=\"form-input w-full\"\n              placeholder=\"Usuario\"\n              value={user}\n              onChange={e => setUser(e.target.value)}\n              required\n            />\n            <input\n              className=\"form-input w-full\"\n              type=\"password\"\n              placeholder=\"Contrase√±a\"\n              value={pwd}\n              onChange={e => setPwd(e.target.value)}\n              required\n            />\n            <button className=\"btn w-full\">Entrar</button>\n          </form>\n\n          <p className=\"text-center text-xs text-gray-500\">\n            ¬øNo tienes cuenta?{' '}\n            <a href=\"/register\" className=\"font-medium text-brand hover:underline\">\n              Reg√≠strate\n            </a>\n          </p>\n        </div>\n      </main>\n    </Container>\n  );\n}\n",
    "frontend/src/pages/Dashboard.tsx": "import Container from '../components/shared/Container';\nimport ItemList from '../features/items/ItemList';\nimport RentalList from '../features/rentals/RentalList';\nimport Section from '../components/shared/Section';\n\nexport default function Dashboard() {\n  return (\n    <Container>\n      <Section title=\"Mis alquileres\">\n        <RentalList />\n      </Section>\n\n      <Section title=\"Cat√°logo p√∫blico\">\n        <ItemList />\n      </Section>\n    </Container>\n  );\n}\n",
    "frontend/src/pages/Home.tsx": "import { Link } from 'react-router-dom';\nimport { ArrowRightIcon } from '@heroicons/react/24/solid';\nimport Container from '../components/shared/Container';\nimport Section from '../components/shared/Section';\n\nexport default function Home() {\n  return (\n    <>\n      {/* HERO */}\n      <section className=\"relative overflow-hidden bg-brand text-white\">\n        <Container>\n          <div className=\"flex min-h-[60vh] flex-col items-center justify-center gap-6 py-24 text-center\">\n            <h1 className=\"max-w-3xl text-balance text-5xl font-extrabold leading-tight\">\n              Alquila y gana dinero con tus herramientas que no usas a diario\n            </h1>\n            <p className=\"max-w-xl text-lg/relaxed text-white/90\">\n              Conecta con gente de tu zona, protege tus transacciones y ahorra comprando.\n            </p>\n            <Link to=\"/dashboard\" className=\"btn inline-flex gap-2\">\n              Explorar cat√°logo <ArrowRightIcon className=\"h-5 w-5\" />\n            </Link>\n          </div>\n        </Container>\n      </section>\n\n      {/* HOW IT WORKS */}\n      <Section title=\"¬øC√≥mo funciona?\">\n        <Container>\n          <div className=\"grid gap-12 md:grid-cols-3\">\n            {[\n              ['Publica', 'Sube tu producto y fija tu precio.'],\n              ['Reserva', 'Los usuarios reservan y pagan la fianza.'],\n              ['Gana', 'Entrega el √≠tem y recibe tu dinero.']\n            ].map(([t, d]) => (\n              <div key={t} className=\"space-y-3 text-center\">\n                <div className=\"mx-auto h-12 w-12 rounded-full bg-brand/10\" />\n                <h3 className=\"text-xl font-semibold\">{t}</h3>\n                <p className=\"text-gray-600\">{d}</p>\n              </div>\n            ))}\n          </div>\n        </Container>\n      </Section>\n    </>\n  );\n}\n",
    "frontend/src/components/ui/SkeletonCard.tsx": "export default function SkeletonCard() {\n  return (\n    <article\n      className=\"\n        flex flex-col overflow-hidden rounded-lg bg-white shadow-card\n        animate-pulse\n      \"\n    >\n      {/* zona de imagen (mantiene proporci√≥n 4:3) */}\n      <div className=\"aspect-[4/3] w-full bg-gray-200\" />\n\n      {/* zona de texto */}\n      <div className=\"space-y-2 p-4\">\n        <div className=\"h-4 w-2/3 rounded bg-gray-200\" />\n        <div className=\"h-4 w-1/3 rounded bg-gray-200\" />\n      </div>\n    </article>\n  );\n}\n",
    "frontend/src/components/ui/LazyImage.tsx": "import { useState } from 'react';\n\ntype Props = {\n  src: string;\n  alt: string;\n  className?: string;\n  /** ancho estimado para el atributo `sizes` (ej. \"100vw\", \"50vw\") */\n  sizes?: string;\n};\n\nexport default function LazyImage({\n  src,\n  alt,\n  className = '',\n  sizes = '100vw'\n}: Props) {\n  const [loaded, setLoaded] = useState(false);\n\n  /* genera srcset (320-640-960 px) */\n  const srcset = [320, 640, 960]\n    .map(w => `${src.replace(/(\\?.*)?$/, '')}?w=${w} ${w}w`)\n    .join(', ');\n\n  return (\n    <img\n      src={src}\n      srcSet={srcset}\n      sizes={sizes}\n      loading=\"lazy\"\n      decoding=\"async\"                    /* üÜï */\n      onLoad={() => setLoaded(true)}\n      className={`${className} transition-opacity duration-500 ${\n        loaded ? 'opacity-100' : 'opacity-0'\n      }`}\n      alt={alt}\n    />\n  );\n}\n",
    "frontend/src/components/ui/ItemCard.tsx": "import { useState } from 'react';\nimport { Item } from '../../features/items/useItems';\nimport LazyImage from './LazyImage';\nimport { resolveImage } from '../../utils';\nimport QuickViewModal from './QuickViewModal';\nimport clsx from 'clsx';\nimport { HeartIcon, EyeIcon } from '@heroicons/react/24/solid';\n\nexport default function ItemCard({ item }: { item: Item }) {\n  const [open, setOpen] = useState(false);\n\n  const imgSrc = resolveImage(\n    item.image_url,\n    `https://source.unsplash.com/640x480/?${encodeURIComponent(item.name)}`\n  );\n\n  return (\n    <>\n      <article\n        className=\"\n          flex flex-col overflow-hidden rounded-lg bg-surface shadow-card\n          transition-transform duration-200 hover:-translate-y-1 hover:shadow-cardHover\n        \"\n      >\n        {/* ---------- Foto ---------- */}\n        <div className=\"relative\">\n          <LazyImage\n            src={imgSrc}\n            alt={item.name}\n            className=\"aspect-[4/3] w-full object-contain p-2\"\n            onClick={() => setOpen(true)}\n          />\n\n          {!item.available && (\n            <span className=\"absolute left-0 top-0 rounded-br-md bg-red-600/90 px-2 py-0.5 text-xs font-semibold uppercase tracking-wide text-white\">\n              Alquilado\n            </span>\n          )}\n\n          <div className=\"absolute inset-0 flex items-start justify-end gap-2 p-2 opacity-0 transition-opacity hover:opacity-100\">\n            <IconBtn title=\"Vista r√°pida\" onClick={() => setOpen(true)}>\n              <EyeIcon className=\"h-5 w-5\" />\n            </IconBtn>\n            <IconBtn title=\"Favorito\">\n              <HeartIcon className=\"h-5 w-5\" />\n            </IconBtn>\n          </div>\n        </div>\n\n        {/* ---------- Info ---------- */}\n        <div className=\"flex flex-1 flex-col gap-2 px-4 pb-4\">\n          <h3 className=\"line-clamp-1 text-lg font-semibold\">{item.name}</h3>\n\n          {item.description && (\n            <p className=\"line-clamp-2 text-sm text-gray-600\">\n              {item.description}\n            </p>\n          )}\n\n          <div className=\"mt-auto flex items-center justify-between\">\n            <p className=\"text-base font-bold text-brand\">\n              {item.price_per_h.toFixed(2)} ‚Ç¨/h\n            </p>\n            <span\n              className={clsx(\n                'badge',\n                item.available ? 'badge--ok' : 'badge--danger'\n              )}\n            >\n              {item.available ? 'Disponible' : 'Alquilado'}\n            </span>\n          </div>\n        </div>\n      </article>\n\n      <QuickViewModal open={open} onClose={() => setOpen(false)} item={item} />\n    </>\n  );\n}\n\nfunction IconBtn({\n  children,\n  onClick,\n  title,\n}: {\n  children: React.ReactNode;\n  onClick?: () => void;\n  title: string;\n}) {\n  return (\n    <button\n      type=\"button\"\n      title={title}\n      onClick={e => {\n        e.stopPropagation();\n        onClick?.();\n      }}\n      className=\"rounded-full bg-white/90 p-1 text-gray-600 shadow transition-colors hover:bg-white\"\n    >\n      {children}\n    </button>\n  );\n}\n",
    "frontend/src/components/ui/SearchBar.tsx": "import { useForm } from 'react-hook-form';\n\ntype Props = { onSubmit: (q: URLSearchParams) => void };\n\nexport default function SearchBar({ onSubmit }: Props) {\n  const { register, handleSubmit, reset } = useForm<{\n    q: string;\n    min: number | undefined;\n    max: number | undefined;\n  }>({ defaultValues: { q: '', min: undefined, max: undefined } });\n\n  return (\n    <form\n      onSubmit={handleSubmit(values => {\n        const params = new URLSearchParams();\n        if (values.q) params.set('name', values.q);\n        if (values.min) params.set('min_price', values.min.toString());\n        if (values.max) params.set('max_price', values.max.toString());\n        onSubmit(params);\n      })}\n      className=\"flex flex-wrap items-end gap-3\"\n    >\n      <input\n        {...register('q')}\n        placeholder=\"Buscar producto‚Ä¶\"\n        className=\"form-input w-52\"\n      />\n      <input\n        {...register('min', { valueAsNumber: true })}\n        type=\"number\"\n        step=\"0.1\"\n        min={0}\n        placeholder=\"‚Ç¨ m√≠nimo\"\n        className=\"form-input w-32\"\n      />\n      <input\n        {...register('max', { valueAsNumber: true })}\n        type=\"number\"\n        step=\"0.1\"\n        min={0}\n        placeholder=\"‚Ç¨ m√°ximo\"\n        className=\"form-input w-32\"\n      />\n      <button className=\"btn\">Filtrar</button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          reset();\n          onSubmit(new URLSearchParams());\n        }}\n        className=\"btn--ghost\"\n      >\n        Limpiar\n      </button>\n    </form>\n  );\n}\n",
    "frontend/src/components/ui/SocialButton.tsx": "// src/components/ui/SocialButton.tsx\nimport { IconType } from 'react-icons';\nimport clsx from 'clsx';\n\ntype Props = {\n  icon: IconType;\n  label: string;\n  provider: 'google' | 'github';\n};\n\nexport default function SocialButton({ icon: Icon, label, provider }: Props) {\n  return (\n    <a\n      href={`/api/oauth/${provider}`}           /* El backend redirige al proveedor */\n      className={clsx(\n        'btn flex w-full items-center justify-center gap-2',\n        provider === 'google' && 'bg-white text-gray-700 shadow border hover:bg-gray-50',\n        provider === 'github' && 'bg-gray-900 text-white hover:bg-gray-800'\n      )}\n    >\n      <Icon className=\"h-5 w-5\" />\n      {label}\n    </a>\n  );\n}\n",
    "frontend/src/components/ui/QuickViewModal.tsx": "import { Fragment } from 'react';\nimport { Dialog, Transition } from '@headlessui/react';\nimport { XMarkIcon, StarIcon } from '@heroicons/react/24/outline';\nimport { Item } from '../../features/items/useItems';\nimport LazyImage from './LazyImage';\nimport { resolveImage } from '../../utils';\nimport clsx from 'clsx';\n\ntype Props = {\n  open: boolean;\n  onClose: () => void;\n  item: Item | null;\n};\n\nexport default function QuickViewModal({ open, onClose, item }: Props) {\n  /* -------- si a√∫n no hay datos -------- */\n  if (!item) return null;\n\n  /* -------- URL de la imagen -------- */\n  const imgSrc = resolveImage(\n    item.image_url,\n    `https://source.unsplash.com/800x600/?${encodeURIComponent(item.name)}`\n  );\n\n  return (\n    <Transition show={open} as={Fragment}>\n      <Dialog onClose={onClose} className=\"relative z-50\">\n        {/* ---------------- Backdrop ---------------- */}\n        <Transition.Child\n          as={Fragment}\n          enter=\"ease-out duration-200\"\n          enterFrom=\"opacity-0\"\n          enterTo=\"opacity-100\"\n          leave=\"ease-in duration-150\"\n          leaveFrom=\"opacity-100\"\n          leaveTo=\"opacity-0\"\n        >\n          <div className=\"fixed inset-0 bg-black/40 backdrop-blur-sm\" />\n        </Transition.Child>\n\n        {/* ---------------- Panel ---------------- */}\n        <div className=\"fixed inset-0 grid place-items-center p-4\">\n          <Transition.Child\n            as={Fragment}\n            enter=\"ease-out duration-200\"\n            enterFrom=\"scale-95 opacity-0\"\n            enterTo=\"scale-100 opacity-100\"\n            leave=\"ease-in duration-150\"\n            leaveFrom=\"scale-100 opacity-100\"\n            leaveTo=\"scale-95 opacity-0\"\n          >\n            <Dialog.Panel\n              className=\"\n                flex max-h-[90vh] w-full max-w-3xl flex-col overflow-hidden\n                rounded-xl bg-white shadow-xl\n              \"\n            >\n              {/* ---------- Header ---------- */}\n              <div className=\"flex items-center justify-between border-b p-4\">\n                <Dialog.Title className=\"text-lg font-semibold\">\n                  {item.name}\n                </Dialog.Title>\n                <button\n                  onClick={onClose}\n                  className=\"rounded p-1 text-gray-500 hover:bg-gray-100\"\n                >\n                  <XMarkIcon className=\"h-5 w-5\" />\n                </button>\n              </div>\n\n              {/* ---------- Body ---------- */}\n              <div\n                className=\"\n                  grid gap-6 overflow-y-auto p-6\n                  md:grid-cols-2                    /* 1 col ‚Üí xs-sm | 2 col ‚Üí ‚â• md */\n                \"\n              >\n                {/* ----- Imagen ----- */}\n                <div className=\"flex items-center justify-center\">\n                  <LazyImage\n                    src={imgSrc}\n                    alt={item.name}\n                    className=\"\n                      w-full rounded-lg object-contain\n                      max-h-[60vh]                 /* nunca se sale de la viewport */\n                    \"\n                  />\n                </div>\n\n                {/* ----- Info ----- */}\n                <div className=\"flex flex-col gap-4\">\n                  {/* Precio */}\n                  <p className=\"text-2xl font-bold text-brand\">\n                    {item.price_per_h.toFixed(2)} ‚Ç¨/h\n                  </p>\n\n                  {/* Rating (demo) */}\n                  <div className=\"flex items-center gap-1\">\n                    {Array.from({ length: 5 }).map((_, i) => (\n                      <StarIcon\n                        key={i}\n                        className={clsx(\n                          'h-5 w-5',\n                          i < 4\n                            ? 'fill-amber-400 stroke-amber-400'\n                            : 'stroke-gray-300'\n                        )}\n                      />\n                    ))}\n                    <span className=\"ml-1 text-sm text-gray-500\">(4,0)</span>\n                  </div>\n\n                  {/* Descripci√≥n */}\n                  {item.description ? (\n                    <p className=\"prose max-w-none text-sm leading-relaxed\">\n                      {item.description}\n                    </p>\n                  ) : (\n                    <p className=\"text-sm text-gray-500\">Sin descripci√≥n.</p>\n                  )}\n\n                  {/* Categor√≠as */}\n                  {item.categories?.length ? (\n                    <div className=\"flex flex-wrap gap-2\">\n                      {item.categories.map(c => (\n                        <span\n                          key={c.id}\n                          className=\"rounded-full bg-gray-100 px-3 py-0.5 text-xs text-gray-600\"\n                        >\n                          {c.name}\n                        </span>\n                      ))}\n                    </div>\n                  ) : null}\n\n                  {/* CTA */}\n                  <button className=\"btn mt-auto w-full\">Reservar ahora</button>\n                </div>\n              </div>\n            </Dialog.Panel>\n          </Transition.Child>\n        </div>\n      </Dialog>\n    </Transition>\n  );\n}\n",
    "frontend/src/components/shared/Section.tsx": "type Props = {\n  title?: string;\n  children: React.ReactNode;\n  id?: string;\n};\n\nexport default function Section({ title, children, id }: Props) {\n  return (\n    <section id={id} className=\"space-y-6 py-16\">\n      {title && (\n        <h2 className=\"text-center text-3xl font-bold tracking-tight\">{title}</h2>\n      )}\n      {children}\n    </section>\n  );\n}\n",
    "frontend/src/components/shared/Container.tsx": "export default function Container({ children }: { children: React.ReactNode }) {\n  return <div className=\"container\">{children}</div>;\n}\n",
    "frontend/src/components/layout/Footer.tsx": "export default function Footer() {\n  return (\n    <footer className=\"mt-24 border-t bg-white py-12 text-center text-sm text-gray-500\">\n      Rental‚ÄëMVP ¬© {new Date().getFullYear()} ¬∑ Hecho con‚ÄØ‚ù§ en FastAPI¬†+¬†React\n    </footer>\n  );\n}\n",
    "frontend/src/components/layout/Header.tsx": "// src/components/layout/Header.tsx\nimport { Link, NavLink } from 'react-router-dom';\nimport logo from '../../assets/logo.png';\nimport { useAuth } from '../../hooks/useAuth';\n\nexport default function Header() {\n  const { token, logout } = useAuth();\n\n  return (\n    <header className=\"sticky top-0 z-30 bg-white/80 backdrop-blur shadow-sm\">\n      {/* ‚Üë duplica el padding vertical para m√°s ‚Äúaire‚Äù */}\n      <div className=\"container flex items-center gap-8 py-4 lg:py-6\">\n        {/* Logo */}\n        <Link to=\"/\" aria-label=\"Inicio\" className=\"flex items-center\">\n          {/* ser√° ‚âà96 px en desktop */}\n          <img\n            src={logo}\n            alt=\"Logo Rental-MVP\"\n            className=\"h-14 md:h-20 lg:h-24 w-auto select-none\"\n            decoding=\"async\"\n          />\n        </Link>\n\n        {/* Navegaci√≥n */}\n        <nav className=\"ml-auto flex gap-8 text-base font-semibold text-gray-600\">\n          {token ? (\n            <>\n              <NavLink to=\"/dashboard\" className=\"hover:text-gray-900\">\n                Dashboard\n              </NavLink>\n              <button onClick={logout} className=\"hover:text-gray-900\">\n                Salir\n              </button>\n            </>\n          ) : (\n            <NavLink to=\"/login\" className=\"hover:text-gray-900\">\n              Login\n            </NavLink>\n          )}\n        </nav>\n      </div>\n    </header>\n  );\n}\n",
    "frontend/src/components/filters/FiltersSidebar.tsx": "import { Disclosure } from '@headlessui/react';\nimport useCategories, { Category } from '../../features/categories/useCategories';\n\ntype Filters = {\n  name?: string;\n  min_price?: number;\n  max_price?: number;\n  categories?: number[];\n  order?: 'price_asc' | 'price_desc' | 'name';\n};\n\ntype Props = {\n  value: Filters;\n  onChange: (f: Filters) => void;\n  onReset: () => void;\n};\n\nexport default function FiltersSidebar({ value, onChange, onReset }: Props) {\n  const { data: cats } = useCategories();\n\n  const toggleCat = (id: number) => {\n    const list = new Set(value.categories ?? []);\n    list.has(id) ? list.delete(id) : list.add(id);\n    onChange({ ...value, categories: [...list] });\n  };\n\n  return (\n    <div className=\"space-y-6 w-full md:w-60 lg:w-72\">\n      {/* Search */}\n      <input\n        placeholder=\"Buscar‚Ä¶\"\n        className=\"form-input w-full\"\n        value={value.name ?? ''}\n        onChange={e => onChange({ ...value, name: e.target.value || undefined })}\n      />\n\n      {/* Price */}\n      <Disclosure defaultOpen>\n        {({ open }) => (\n          <>\n            <Disclosure.Button className=\"flex w-full justify-between text-sm font-semibold\">\n              Precio {open ? '‚àí' : '+'}\n            </Disclosure.Button>\n            <Disclosure.Panel className=\"mt-3 space-y-2\">\n              <input\n                type=\"number\"\n                min={0}\n                step={0.1}\n                placeholder=\"m√≠n\"\n                className=\"form-input w-full\"\n                value={value.min_price ?? ''}\n                onChange={e =>\n                  onChange({\n                    ...value,\n                    min_price: e.target.value ? Number(e.target.value) : undefined\n                  })\n                }\n              />\n              <input\n                type=\"number\"\n                min={0}\n                step={0.1}\n                placeholder=\"m√°x\"\n                className=\"form-input w-full\"\n                value={value.max_price ?? ''}\n                onChange={e =>\n                  onChange({\n                    ...value,\n                    max_price: e.target.value ? Number(e.target.value) : undefined\n                  })\n                }\n              />\n            </Disclosure.Panel>\n          </>\n        )}\n      </Disclosure>\n\n      {/* Categories */}\n      <Disclosure defaultOpen>\n        {({ open }) => (\n          <>\n            <Disclosure.Button className=\"flex w-full justify-between text-sm font-semibold\">\n              Categor√≠as {open ? '‚àí' : '+'}\n            </Disclosure.Button>\n            <Disclosure.Panel className=\"mt-3 flex flex-wrap gap-2\">\n              {cats.map((c: Category) => {\n                const active = value.categories?.includes(c.id);\n                return (\n                  <button\n                    key={c.id}\n                    onClick={() => toggleCat(c.id)}\n                    className={\n                      active\n                        ? 'rounded-full bg-brand px-3 py-0.5 text-xs font-medium text-white'\n                        : 'rounded-full border px-3 py-0.5 text-xs text-gray-600'\n                    }\n                  >\n                    {c.name}\n                  </button>\n                );\n              })}\n            </Disclosure.Panel>\n          </>\n        )}\n      </Disclosure>\n\n      {/* Order */}\n      <select\n        className=\"form-select w-full\"\n        value={value.order ?? ''}\n        onChange={e =>\n          onChange({\n            ...value,\n            order: e.target.value ? (e.target.value as Filters['order']) : undefined\n          })\n        }\n      >\n        <option value=\"\">Ordenar por‚Ä¶</option>\n        <option value=\"price_asc\">Precio ‚Üë</option>\n        <option value=\"price_desc\">Precio ‚Üì</option>\n        <option value=\"name\">Nombre</option>\n      </select>\n\n      <button onClick={onReset} className=\"btn--ghost w-full\">\n        Limpiar filtros\n      </button>\n    </div>\n  );\n}\n"
}